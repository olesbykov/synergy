<?php
/*
Задание №1.

Добро пожаловать в матрицу. Всё что нам остается пользоваться ей и подстраивать под себя и нам нужна программа, которая будет выявлять новичков и профи, хотя бы по первым признакам.

Ваша задача:

Нам нужна программа, которая будет принимать на вход два числа и если пользователь введёт 1, то его будет приветствовать доброжелательное письмо, если нет, то будет отводить от входа к дальнейшему изучению программирования.

Помните, что у Вас есть функция приёма данных fgets(STDIN);
*/
function htmlStart($pagetitle) {//создадим функцию для вывода html шапки
    global $argc;//используем переменную из-за пределов функции, поэтому сначала укажем, что она - global
    if ($argc === NULL) { //в консоли не показываем
        echo "<html>".PHP_EOL."<head>".PHP_EOL."    <title>$pagetitle</title>".PHP_EOL."</head>".PHP_EOL."<body style=\"background: #99bbdd\">".PHP_EOL."    <div style=\"background: #ffffff;width: 500px; margin:10px auto; padding: 25px;border-radius: 15px;\"><h2>$pagetitle</h2>".PHP_EOL;
    }
}
function htmlEnd() {//создадим функцию для валидности html-кода при ошибке и выходе из скрипта
    global $argc;//используем переменную из-за пределов функции, поэтому сначала укажем, что она - global
    if ($argc === NULL) { //в консоли не показываем
        echo PHP_EOL."    </div>".PHP_EOL."</body>".PHP_EOL."</html>";
    }
}
function htmlbr() {//создадим функцию для внедрения тега <br/> где он может быть нужен, при этом без его отображения в консоли
    global $argc;//используем переменную из-за пределов функции, поэтому сначала укажем, что она - global
    if ($argc === NULL) { //в консоли не показываем
        echo "<br/>";
    }
}
function errorNum() {//создадим функцию для перезагрузки страницы, если юзер ввёл что-то не то
    global $argc;//используем переменную из-за пределов функции, поэтому сначала укажем, что она - global
    if ($argc === NULL) { //в консоли не показываем
        //htmlbr();//выводим html тег <br/>
        echo "<br/><br/><a href=\"1.php\">Попробовать ещё раз</a>";
        htmlEnd();//выведем html подвал
    }
}
if ($argc === NULL) { //в консоли не используем POST и не показываем форму
    //var_dump ($_POST);
    if (!empty($_POST)) {//проверяем, отправлялась ли форма
        $num1 = !empty($_POST['num1']) ? $_POST['num1'] : '';//присвоим первое число переменной $num1
        $num2 = !empty($_POST['num2']) ? $_POST['num2'] : '';//присвоим второе число переменной $num2
    } else {//если форма не отправлялась, то покажем её
        htmlStart('Введите код');//выведем html шапку
        //далее код формы на html. Она отправляется методом post на эту страницу.
        //На пять строчек выше - обработка результатов из неё
        ?>
<form action="1.php" method="post">
    <label>
        Введите первое число: <input type="text" name="num1">
    </label>
    <br>
    <label>
        Введите второе число: <input type="text" name="num2">
    </label>
    <br>
    <input type="submit" value="Отправить">
</form><?php htmlEnd(); exit; //выведем конец html кода и завершим выполнение нашего php-скрипта
    }
} else {//если мы оказались здесь, то скрипт выполняется в консоли
    echo PHP_EOL . "Введите первое число: ";//просим первое число
    $num1 = trim(fgets(STDIN));//запросим у пользователя его ввод; trim удалит лишние пробелы в начале и/или конце строки из fgets(STDIN);
}
//var_dump($num1);

//создадим функцию для проверки число ли ввёл пользователь
function numOne(&$num){ //используем ссылку (&), чтобы можно переназначить тип данных со строки на число. Если не указать, то условие $num1 === 1 || $num2 === 1 будет давать false из-за типа данных string

    if (preg_match("/^[0-9]+$/",$num)) {//проверяем число ли ввёл юзер
        if ( $num[0] === '0' ) {//если в строке одни цифры, то не начинаются ли они с 0? Если использовать отдельно от условия выше, то хорошо бы проверить, что первый символ вообще есть: (isset($num[0]) && $num[0] === '0')
            echo "Целое число не может начинаться на 0. Программа завершена." . PHP_EOL;
            errorNum();//выводим предложение перезагрузить страницу и html подвал
            exit;//завершаем выполнение скрипта
        }
        $num = (int)$num;// то же самое: settype($num, 'integer');
        echo "Вы ввели целое число $num" . PHP_EOL;
        htmlbr();//выводим html тег <br/>
    } elseif ($num === '' || $num === NULL ) {//если нет, то попробуем подсказать; этим условием проверим пустая строка или нет
        echo "Вы не ввели число. Программа завершена." . PHP_EOL;
        errorNum();//выводим предложение перезагрузить страницу и html подвал
        exit;//завершаем выполнение скрипта
    } else {//другие ошибки
        echo "Есть недопустимые символы. Программа завершена." . PHP_EOL;
        errorNum();//выводим предложение перезагрузить страницу и html подвал
        exit;//завершаем выполнение скрипта
    }
}

if ($argc === NULL) { //в браузере выводим html шапку с заголовком Результат проверки
    htmlStart('Результат проверки');
} 

numOne($num1);//результат проверки первого числа
if ($argc !== NULL) {//в консоли запрашиваем второе число
    echo PHP_EOL . "Введите второе число: ";
    $num2 = trim(fgets(STDIN));//trim удалит лишние пробелы в начале и/или конце строки из fgets(STDIN);
}
numOne($num2);//результат проверки вторго числа
echo PHP_EOL;//перенос строки в консоли и в исходном коде


if ($argc === NULL) {//в браузере выводим html тег для жирности текста с результатом
    echo "<strong>";
} 
//var_dump ($num1);
//var_dump ($num2);
if ($num1 === 1 || $num2 === 1 ) {//если одно из чисел равно 1
    echo "доброжелательное письмо" . PHP_EOL;
} else {//если обе переменные числа, но не 1
    echo "вернитесь к изучению программирования" . PHP_EOL;
    errorNum();
}

if ($argc === NULL) {//в браузере закрываем html тег для жирности текста с результатом и выводим подвал
    echo "</strong>";
htmlEnd();
}